# --- DISCORD webhooks ---
DISCORD_WEBHOOK_URL=https://discord.com/api/webhooks/1397052240212262952/H98Z1ZyiqNJw3Z46-ATdgLkEgcM4LTPUUEYlNTyItzSxGlls7mmBcFMmt2vZXL4ukHj5
DISCORD_ADMIN_WEBHOOK=https://discord.com/api/webhooks/1406830521631248515/enV7jbz_AZBLcyze_torBmHyYQ4u9_GRs4HsWdCLU0YKNU0ajupnf37iKH7QtVbwfZbW

# Discord Application Public Key for interaction verification
# Get this from: Discord Developer Portal -> Your Application -> General Information -> Public Key
DISCORD_PUBLIC_KEY=d0a33fb99c135747d53bf62ca0cfa4adee600a032975e26c928e834760f5a212

# Discord Bot Token for sending messages with interactive components
# Get this from: Discord Developer Portal -> Your Application -> Bot -> Token
DISCORD_BOT_TOKEN=MTM5ODUyMTQ0NzcyNjU4MzgwOA.GF3Wl-.SDhJewwzbe1_DLVH2LclU1VQLKN4y55Gn8Dv3o

# Discord Admin Channel ID for admin reports with buttons
# Right-click channel in Discord -> Copy Channel ID (requires Developer Mode enabled)
DISCORD_ADMIN_CHANNEL_ID=1406830487904718919

# Discord Alert Channel ID for stock alerts with interactive chart buttons
# Right-click your alerts channel in Discord -> Copy Channel ID
DISCORD_ALERT_CHANNEL_ID=1398523071194726471

# --- Phase B feature flags (safe defaults off) ---
# When enabled, preliminary classification in feeds/analyzer uses the new classify.classify() adapter.
FEATURE_CLASSIFIER_UNIFY=1
# When enabled, the analyzer will post a truncated summary markdown as an embed to the admin webhook.
FEATURE_ADMIN_EMBED=0
# When enabled, alerts will include intraday indicators (VWAP/RSI14) when available.
FEATURE_INDICATORS=1

# Optional path to a specific analyzer summary markdown file for admin embed.
# If unset, the helper auto-selects the newest summary_*.md under out/analyzer.
ADMIN_SUMMARY_PATH=

# --- Features ---
FEATURE_ALERTS=1
FEATURE_HEARTBEAT=1
FEATURE_RECORD_ONLY=0

# Heartbeat cadence in minutes (0=only at boot and manual)
HEARTBEAT_INTERVAL_MIN=15

# --- Classification gates (all optional; blank disables) ---
MIN_SCORE=
MIN_SENT_ABS=
CATEGORIES_ALLOW=

# --- Sources & filters ---
SKIP_SOURCES=
PRICE_CEILING=10
IGNORE_INSTRUMENT_TICKERS=1

# --- Ticker extraction flags ---
ALLOW_OTC_TICKERS=0
DOLLAR_TICKERS_REQUIRE_EXCHANGE=0

# --- Rate limiting / pacing (alerts.py) ---
ALERTS_RESPECT_RL_ON_SUCCESS=1
ALERTS_MIN_INTERVAL_MS=300
ALERTS_JITTER_MS=150
MAX_ALERTS_PER_CYCLE=10
SKIP_ML_FOR_EARNINGS=1

# Per-key burst limiter (alerts_rate_limit.py). Off by default in prod.
HOOK_ALERTS_RATE_LIMIT=0
ALERTS_RATE_WINDOW_SECS=60
ALERTS_RATE_MAX=4

# --- Analyzer / misc ---
TICKERS_DB_PATH=

# UTC schedule for the analyzer summary. The analyzer will run automatically
# at the specified time (UTC) once per day.  Specify the hour (0–23) and
# minute (0–59) separately.  Defaults to 21:30 if unset.
ANALYZER_UTC_HOUR=21
ANALYZER_UTC_MINUTE=30

# Local timezone used for displaying times and computing market session labels.
# Provide a valid IANA timezone (e.g. "America/Chicago" for US Central time).
TZ=America/Chicago

# --- Logging ---
LOG_LEVEL=DEBUG

# --- Finviz Elite (news export) ---
FINVIZ_ELITE_AUTH=d1049031-42ed-4ff8-b7be-ce83c32c084d
FINVIZ_AUTH_TOKEN=d1049031-42ed-4ff8-b7be-ce83c32c084d
FEATURE_FINVIZ_NEWS=0
FINVIZ_NEWS_KIND=stocks
FINVIZ_NEWS_TICKERS=
FINVIZ_NEWS_INCLUDE_BLOGS=0
FINVIZ_NEWS_MAX=200
FINVIZ_NEWS_TIMEOUT=10
# FINVIZ_NEWS_PARAMS=pid=12345                   # optional extra query params (e.g., portfolio id)

# --- Phase‑C: Provider & sentiment features ---
#
# Tiingo real‑time quotes: set your Tiingo API key and flip FEATURE_TIINGO=1
# to prefer Tiingo for last/prev price snapshots.  The default provider order
# is ``tiingo,av,yf`` – see MARKET_PROVIDER_ORDER below.  When this flag is
# off or the key is blank, the bot falls back to Alpha Vantage and yfinance.
FEATURE_TIINGO=1
TIINGO_API_KEY=8fe19137e6f36b25115f848c7d63fc38de4ab35c

# Financial Modeling Prep stock news sentiment feed.  When enabled, the bot
# fetches sentiment scores via the FMP RSS endpoint and attaches a
# ``sentiment_fmp`` field to events.  The free feed does not require a key,
# but future tiers may.  Leave FMP_API_KEY blank unless you have one.
FEATURE_FMP_SENTIMENT=0
FMP_API_KEY=Gnp915LxbsnR9Ln2JdwaB6SyTMbqHb4L

# --- External news sentiment sources ---
# Enable the aggregated news sentiment layer.  When FEATURE_NEWS_SENTIMENT=1 the
# bot will call enabled providers (Alpha Vantage, Marketaux, StockNewsAPI and
# Finnhub) to compute a combined sentiment score for each ticker.  Use the
# per‑provider feature flags below to turn individual feeds on or off.
FEATURE_NEWS_SENTIMENT=1
ALPHAVANTAGE_API_KEY=OE27D2Q34JW1WOIY
FEATURE_ALPHA_SENTIMENT=1
# Marketaux sentiment feed.  Set to 1 to enable and provide a MARKETAUX_API_KEY.
FEATURE_MARKETAUX_SENTIMENT=0
MARKETAUX_API_KEY=SK5oSAT1dfvUfDGPjnPYvgtTXPxZAbjQOiEjEiiV
# StockNewsAPI sentiment feed.  Set to 1 to enable and provide a STOCKNEWS_API_KEY.
FEATURE_STOCKNEWS_SENTIMENT=0
STOCKNEWS_API_KEY=
# Finnhub sentiment feed.  Set to 1 to enable and provide a FINNHUB_API_KEY.
FEATURE_FINNHUB_SENTIMENT=0
FINNHUB_API_KEY=d26q8dhr01qvrairld20d26q8dhr01qvrairld2g
# Provider weights used when combining sentiment scores.  Values do not need
# to sum to 1 – the aggregator normalises weights across responding providers.
# Default: Alpha=0.4, Marketaux=0.3, StockNewsAPI=0.3, Finnhub=0.0.
SENTIMENT_WEIGHT_ALPHA=0.4
SENTIMENT_WEIGHT_MARKETAUX=0.3
SENTIMENT_WEIGHT_STOCKNEWS=0.3
SENTIMENT_WEIGHT_FINNHUB=0.0
# Minimum total number of articles across all providers before a combined
# sentiment score is returned.  When the sum of n_articles is below this
# threshold, the bot falls back to local sentiment only.
SENTIMENT_MIN_ARTICLES=1

# Finviz news export feed.  The Elite plan allows exporting filtered news
# as CSV via a custom URL.  Provide your export URL (including v= and auth
# parameters) here and set FEATURE_FINVIZ_NEWS_EXPORT=1 to enable.  Rows
# without tickers will be included as general market news.
FEATURE_FINVIZ_NEWS_EXPORT=0
FINVIZ_NEWS_EXPORT_URL=https://elite.finviz.com/news_export.ashx?v=1

# Watchlist support.  When FEATURE_WATCHLIST=1 the bot will load the CSV
# defined by WATCHLIST_CSV once per cycle and bypass the price ceiling for
# tickers on the list.  The file must have a ``ticker`` column and may
# include optional ``rationale`` or ``weight`` columns.
FEATURE_WATCHLIST=1
WATCHLIST_CSV=data/watchlist.csv

# Rich alert charts.  Set FEATURE_RICH_ALERTS=1 to attach an intraday
# candlestick chart for each alert.  Charts require Matplotlib and
# mplfinance; if unavailable the bot will silently skip chart rendering.
FEATURE_RICH_ALERTS=1

# Advanced multi-panel charts.  When enabled, alerts will include professional-grade
# multi-panel charts with RSI, MACD, moving averages, and VWAP indicators. Users can
# click buttons to switch between timeframes (1D, 5D, 1M, 3M, 1Y). Requires mplfinance.
FEATURE_ADVANCED_CHARTS=1

# Default timeframe for advanced charts (1D, 5D, 1M, 3M, 1Y).
# This is the initial timeframe shown when an alert is posted.
CHART_DEFAULT_TIMEFRAME=1D

# Interactive admin reports with backtest results and parameter controls.
# When enabled, the analyzer will post a nightly report to DISCORD_ADMIN_WEBHOOK
# with performance metrics, keyword analysis, and interactive buttons for
# adjusting bot parameters in real-time.
FEATURE_ADMIN_REPORTS=1

# --- Patch‑5: Watchlist cascade and 52‑week low scanner ---
# When enabled, the bot maintains a stateful watchlist where tickers decay from
# HOT to WARM to COOL over time.  The state is persisted to the JSON file
# defined by WATCHLIST_STATE_FILE (see below).  Set FEATURE_WATCHLIST_CASCADE=1
# to enable cascading behaviour.  Durations are specified in days.
FEATURE_WATCHLIST_CASCADE=1
# Number of days to keep a ticker in the HOT state before demoting to WARM.
WATCHLIST_HOT_DAYS=7
# Number of days to keep a ticker in the WARM state before demoting to COOL.
WATCHLIST_WARM_DAYS=21
# Number of days to keep a ticker in the COOL state before it can be removed.
# Currently, COOL tickers remain indefinitely; this setting is reserved for
# future use.
WATCHLIST_COOL_DAYS=60
# Path to the JSON file used to persist the cascade state.  Relative paths
# are resolved relative to the project root.  Defaults to data/watchlist_state.json.
WATCHLIST_STATE_FILE=data/watchlist_state.json

# Enable the 52‑week low scanner.  When enabled, the bot will query Finviz
# for tickers making new 52‑week lows and add them to the watchlist cascade.
FEATURE_52W_LOW_SCANNER=1
# Percentage above the 52‑week low considered "near" the low.  Finviz does
# not currently expose a distance filter, so this value is unused for now
# but is reserved for future expansion.
LOW_DISTANCE_PCT=5
# Minimum average daily volume (shares) required to consider a stock for the
# 52‑week low scanner.  Use 0 to disable the volume filter.  Defaults to
# 300000 shares.
LOW_MIN_AVG_VOL=300000

# Use Finviz’s built‑in charts as a fallback when QuickChart and Matplotlib are
# disabled.  When FEATURE_FINVIZ_CHART=1 the bot will embed a Finviz chart
# snapshot into alerts instead of generating charts locally.  Defaults to off.
FEATURE_FINVIZ_CHART=1

# View identifier for the Finviz breakout scanner (Finviz Elite).  A value of
# 152 selects Finviz’s default breakout view which surfaces sub‑$10 stocks
# experiencing volume/price breakouts.  Change this to another view ID to
# customise the scanner or leave blank to use the default.
FINVIZ_SCREENER_VIEW=152

# Alpaca streaming.  When FEATURE_ALPACA_STREAM=1 and valid credentials are
# provided, the bot subscribes to the Alpaca websocket for each alerted
# ticker for up to STREAM_SAMPLE_WINDOW_SEC seconds after posting.  This can
# provide more timely price updates.  Leave this disabled if you do not
# have an Alpaca IEX API subscription.
FEATURE_ALPACA_STREAM=1
ALPACA_API_KEY=AKPOT9EAQCCVI0BLH7GQ
ALPACA_SECRET=nZUmrS7uLNAd337m8e5Yj83ZjT8hOi7I8msjaI0t
STREAM_SAMPLE_WINDOW_SEC=0

# Admin digest & approval loop.  Enabling FEATURE_APPROVAL_LOOP causes the
# analyzer to write pending plan files and wait for approval before
# applying weight adjustments.  Approval marker files are stored under
# APPROVAL_DIR.  Admin summary embeds require FEATURE_ADMIN_EMBED=1 and a
# valid DISCORD_ADMIN_WEBHOOK.
FEATURE_APPROVAL_LOOP=1
APPROVAL_DIR=out/approvals

# Earnings calendar cache.  Path to the cached earnings calendar pulled by
# ``python -m catalyst_bot.jobs.earnings_pull``.  The analyzer will read
# this file and annotate earnings days in its summary.  Change this path
# if you wish to store the calendar elsewhere.
EARNINGS_CALENDAR_CACHE=data/earnings_calendar.csv

# Provider order.  Comma‑separated list of price providers to query for
# last/prev snapshots.  Recognised values: ``tiingo``, ``av`` (Alpha Vantage),
# ``yf`` (yfinance).  The default order is ``tiingo,av,yf``.  You can skip
# providers (e.g. av,yf) or reorder them via this variable.
MARKET_PROVIDER_ORDER=tiingo,av,yf

# Backtest provider order.  Overrides ``MARKET_PROVIDER_ORDER`` for the
# backtest simulator.  Provide a comma‑separated list of providers in
# the desired priority for historical simulations.  If blank, the
# simulator falls back to MARKET_PROVIDER_ORDER.  Recognised values
# include ``tiingo``, ``av``, ``alpha`` and ``yf``.
BACKTEST_PROVIDER_ORDER=tiingo,yf,av

# Plain logging mode.  When LOG_PLAIN=1 the bot emits human‑readable
# one‑line logs to the console.  Structured JSON logs are still written to
# data/logs/bot.jsonl for downstream ingestion.  Leave at 0 to use
# compact JSON logs on the console.
LOG_PLAIN=1

# --- Patch‑2: QuickChart, momentum and local sentiment ---
# Generate hosted candlestick charts via the QuickChart API.  When this flag
# is enabled, the bot will build a Chart.js config and return an image URL.
# If disabled, the bot falls back to rich alerts (matplotlib) or Finviz charts.
FEATURE_QUICKCHART=1

# Optional QuickChart API key.  Providing a key increases the API rate limit for
# QuickChart's /chart/create endpoint used to shorten long Chart.js configs.
# Leave blank if you do not have a key.
QUICKCHART_API_KEY=

# Compute additional intraday momentum indicators (MACD, EMA crosses, VWAP delta)
# from recent price history.  Requires FEATURE_INDICATORS=1 to have an effect.
FEATURE_MOMENTUM_INDICATORS=1

# Use a local sentiment analyser when external feeds are unavailable.  When
# enabled, the bot will compute a VADER/lexicon-based sentiment score for
# each headline and display it alongside FMP sentiment (when available).
FEATURE_LOCAL_SENTIMENT=1

# --- Patch‑2: Breakout scanner ---
# Enable the proactive breakout scanner.  When turned on, the bot will query
# Finviz Elite for sub‑$10 tickers with unusual volume and new highs and
# generate events for them.  Requires a valid FINVIZ_AUTH_TOKEN.
FEATURE_BREAKOUT_SCANNER=1
# Minimum average daily volume (shares) a ticker must have to be considered a
# breakout candidate.  Values are plain numbers (e.g. 300000 for 300k).  Set
# to 0 to disable the avg volume filter.
BREAKOUT_MIN_AVG_VOL=300000
# Minimum relative volume threshold (> 1 indicates higher than usual activity).
# Use a decimal value such as 1.5.  Set to 0 to disable the relative volume filter.
BREAKOUT_MIN_RELVOL=1.5

# --- Patch‑3: Deduplication & duplicate suppression ---
# Enable refined deduplication across sources and cycles.  When
# FEATURE_DEDUP_REFINED=1 the bot persists a first‑seen index in
# ``data/dedup/first_seen.db`` and suppresses re‑alerting for previously
# observed signatures.  Defaults to 0 (off) for backwards compatibility.
FEATURE_DEDUP_REFINED=1

# Persistent seen store.  When enabled (default), the bot will maintain a
# lightweight SQLite database (``data/seen_ids.sqlite``) to keep track of
# item IDs that have already been alerted on.  This prevents duplicate
# notifications across cycles and restarts.  Set FEATURE_PERSIST_SEEN=0 to
# disable persistent storage (in‑memory TTL still applies).
FEATURE_PERSIST_SEEN=1

# Duplicate suppression TTL for the in‑memory seen cache.  The bot uses
# a small in‑process cache to suppress duplicate alerts for a period of
# time even when persistent dedup is disabled.  Specify the TTL in
# seconds.  The default is 900 seconds (15 minutes).  Increase this
# value to avoid repeat alerts over longer periods (e.g. 86400 for 24 hours).
SEEN_TTL_SECONDS=900

# TTL for the persistent seen store, in days.  Entries older than this
# many days are purged on startup.  Defaults to 7 days if unset.  You
# usually don’t need to change this unless your alert cadence is very
# high.
SEEN_TTL_DAYS=7

# Optional QuickChart API key to improve rate limits on the /chart/create endpoint.
QUICKCHART_API_KEY=

FEATURE_ANALYST_SIGNALS=1
ANALYST_RETURN_THRESHOLD=10.0
ANALYST_PROVIDER=fmp
ANALYST_API_KEY=Gnp915LxbsnR9Ln2JdwaB6SyTMbqHb4L
FEATURE_FINVIZ_CHART=1
FINVIZ_SCREENER_VIEW=152
ANALYZER_UTC_HOUR=21
ANALYZER_UTC_MINUTE=30
TZ=America/Chicago

FEATURE_SEC_DIGESTER=1
SEC_LOOKBACK_DAYS=7
SENTIMENT_WEIGHT_SEC=0.2

PRICE_FLOOR=0.1

FEATURE_EARNINGS_ALERTS=1

EARNINGS_LOOKAHEAD_DAYS=14
SENTIMENT_WEIGHT_EARNINGS=0.2

SENTIMENT_WEIGHT_LOCAL=0.4
SENTIMENT_WEIGHT_EXT=0.3
SENTIMENT_WEIGHT_SEC=0.2
SENTIMENT_WEIGHT_ANALYST=0.05
SENTIMENT_WEIGHT_EARNINGS=0.05

FEATURE_BULLISHNESS_GAUGE=1

FEATURE_SENTIMENT_LOGGING=0

ALLOWED_EXCHANGES=nasdaq,nyse,amex

QUICKCHART_BASE_URL=https://quickchart.io

FEATURE_SCREENER_BOOST=1

SCREENER_CSV=data/finviz.csv

FEATURE_SECTOR_INFO=0
  FEATURE_MARKET_TIME=0
  FEATURE_SECTOR_RELAX=0
  LOW_BETA_SECTORS=utilities:5,consumer staples:7
  DEFAULT_NEUTRAL_BAND_BPS=0
  SECTOR_FALLBACK_LABEL=Unknown
  SESSION_NAMES=pre:Pre‑Mkt,regular:Regular,after:After‑Hours,closed:Closed

  # Price filters (if not already set)
  MIN_PRICE=2.0
  MAX_PRICE=450

  FEATURE_LLM_ANALYSIS=0 