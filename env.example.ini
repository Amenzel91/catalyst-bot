# --- DISCORD webhooks ---
DISCORD_WEBHOOK_URL=                         # REQUIRED: main alerts channel
DISCORD_ADMIN_WEBHOOK=                       # optional: admin/dev channel for heartbeats

# --- Phase B feature flags (safe defaults off) ---
# When enabled, preliminary classification in feeds/analyzer uses the new classify.classify() adapter.
FEATURE_CLASSIFIER_UNIFY=0                   # 1=enable unified classifier bridge
# When enabled, the analyzer will post a truncated summary markdown as an embed to the admin webhook.
FEATURE_ADMIN_EMBED=0                        # 1=enable analyzer summary embed
# When enabled, alerts will include intraday indicators (VWAP/RSI14) when available.
FEATURE_INDICATORS=0                         # 1=enable intraday indicators enrichment

# Optional path to a specific analyzer summary markdown file for admin embed.
# If unset, the helper auto-selects the newest summary_*.md under out/analyzer.
ADMIN_SUMMARY_PATH=

# --- Features ---
FEATURE_ALERTS=1                             # 1=enable alerts
FEATURE_HEARTBEAT=1                          # 1=send boot/interval heartbeats
FEATURE_RECORD_ONLY=0                        # 1=don’t post alerts, only log

# Heartbeat cadence in minutes (0=only at boot and manual)
HEARTBEAT_INTERVAL_MIN=0

# --- Classification gates (all optional; blank disables) ---
MIN_SCORE=
MIN_SENT_ABS=
CATEGORIES_ALLOW=                            # CSV of categories to allow (case-insensitive)

# --- Sources & filters ---
SKIP_SOURCES=                                # e.g. sec_fwp to cut noise while testing
PRICE_CEILING=                               # e.g. 10.0 to skip tickers > $10
IGNORE_INSTRUMENT_TICKERS=1                  # 1=drop warrants/units/etc

# --- Ticker extraction flags ---
ALLOW_OTC_TICKERS=0                          # 1=allow OTCMKTS/OTCQX/OTCQB prefixes
DOLLAR_TICKERS_REQUIRE_EXCHANGE=0            # 1=drop bare $TICKER unless exchange-qualified

# --- Rate limiting / pacing (alerts.py) ---
ALERTS_RESPECT_RL_ON_SUCCESS=1               # gently pace when Discord bucket empties
ALERTS_MIN_INTERVAL_MS=300                   # soft spacing per webhook (ms)
ALERTS_JITTER_MS=150                         # random jitter added after success (ms)
MAX_ALERTS_PER_CYCLE=40                      # cap per run loop

# Per-key burst limiter (alerts_rate_limit.py). Off by default in prod.
HOOK_ALERTS_RATE_LIMIT=0
ALERTS_RATE_WINDOW_SECS=60
ALERTS_RATE_MAX=4

# --- Analyzer / misc ---
TICKERS_DB_PATH=                             # optional override; else data/tickers.db

# --- Logging ---
LOG_LEVEL=INFO                               # DEBUG, INFO, WARNING, ERROR

# --- Finviz Elite (news export) ---
FINVIZ_ELITE_AUTH=                               # paste your Finviz Elite API token (legacy/fallback)
FINVIZ_AUTH_TOKEN=                               # preferred Finviz API token; falls back to FINVIZ_ELITE_AUTH when unset
FEATURE_FINVIZ_NEWS=1                            # 1=enable, 0=disable
FINVIZ_NEWS_KIND=stocks                          # market|stocks|etfs|crypto
FINVIZ_NEWS_TICKERS=                             # optional CSV filter: e.g. AAPL,MSFT
FINVIZ_NEWS_INCLUDE_BLOGS=0                      # 0=news only, 1=include blogs
FINVIZ_NEWS_MAX=200                              # cap items per pull
FINVIZ_NEWS_TIMEOUT=10                           # seconds
# FINVIZ_NEWS_PARAMS=pid=12345                   # optional extra query params (e.g., portfolio id)

# --- Phase‑C: Provider & sentiment features ---
#
# Tiingo real‑time quotes: set your Tiingo API key and flip FEATURE_TIINGO=1
# to prefer Tiingo for last/prev price snapshots.  The default provider order
# is ``tiingo,av,yf`` – see MARKET_PROVIDER_ORDER below.  When this flag is
# off or the key is blank, the bot falls back to Alpha Vantage and yfinance.
FEATURE_TIINGO=0
TIINGO_API_KEY=

# Financial Modeling Prep stock news sentiment feed.  When enabled, the bot
# fetches sentiment scores via the FMP RSS endpoint and attaches a
# ``sentiment_fmp`` field to events.  The free feed does not require a key,
# but future tiers may.  Leave FMP_API_KEY blank unless you have one.
FEATURE_FMP_SENTIMENT=0
FMP_API_KEY=

# Finviz news export feed.  The Elite plan allows exporting filtered news
# as CSV via a custom URL.  Provide your export URL (including v= and auth
# parameters) here and set FEATURE_FINVIZ_NEWS_EXPORT=1 to enable.  Rows
# without tickers will be included as general market news.
FEATURE_FINVIZ_NEWS_EXPORT=0
FINVIZ_NEWS_EXPORT_URL=

# Watchlist support.  When FEATURE_WATCHLIST=1 the bot will load the CSV
# defined by WATCHLIST_CSV once per cycle and bypass the price ceiling for
# tickers on the list.  The file must have a ``ticker`` column and may
# include optional ``rationale`` or ``weight`` columns.
FEATURE_WATCHLIST=0
WATCHLIST_CSV=data/watchlist.csv

# Rich alert charts.  Set FEATURE_RICH_ALERTS=1 to attach an intraday
# candlestick chart for each alert.  Charts require Matplotlib and
# mplfinance; if unavailable the bot will silently skip chart rendering.
FEATURE_RICH_ALERTS=0

# Alpaca streaming.  When FEATURE_ALPACA_STREAM=1 and valid credentials are
# provided, the bot subscribes to the Alpaca websocket for each alerted
# ticker for up to STREAM_SAMPLE_WINDOW_SEC seconds after posting.  This can
# provide more timely price updates.  Leave this disabled if you do not
# have an Alpaca IEX API subscription.
FEATURE_ALPACA_STREAM=0
ALPACA_API_KEY=
ALPACA_SECRET=
STREAM_SAMPLE_WINDOW_SEC=0

# Admin digest & approval loop.  Enabling FEATURE_APPROVAL_LOOP causes the
# analyzer to write pending plan files and wait for approval before
# applying weight adjustments.  Approval marker files are stored under
# APPROVAL_DIR.  Admin summary embeds require FEATURE_ADMIN_EMBED=1 and a
# valid DISCORD_ADMIN_WEBHOOK.
FEATURE_APPROVAL_LOOP=0
APPROVAL_DIR=out/approvals

# Earnings calendar cache.  Path to the cached earnings calendar pulled by
# ``python -m catalyst_bot.jobs.earnings_pull``.  The analyzer will read
# this file and annotate earnings days in its summary.  Change this path
# if you wish to store the calendar elsewhere.
EARNINGS_CALENDAR_CACHE=data/earnings_calendar.csv

# Provider order.  Comma‑separated list of price providers to query for
# last/prev snapshots.  Recognised values: ``tiingo``, ``av`` (Alpha Vantage),
# ``yf`` (yfinance).  The default order is ``tiingo,av,yf``.  You can skip
# providers (e.g. av,yf) or reorder them via this variable.
MARKET_PROVIDER_ORDER=tiingo,av,yf

# Backtest provider order.  Overrides ``MARKET_PROVIDER_ORDER`` for the
# backtest simulator.  Provide a comma‑separated list of providers in
# the desired priority for historical simulations.  If blank, the
# simulator falls back to MARKET_PROVIDER_ORDER.  Recognised values
# include ``tiingo``, ``av``, ``alpha`` and ``yf``.
BACKTEST_PROVIDER_ORDER=

# Plain logging mode.  When LOG_PLAIN=1 the bot emits human‑readable
# one‑line logs to the console.  Structured JSON logs are still written to
# data/logs/bot.jsonl for downstream ingestion.  Leave at 0 to use
# compact JSON logs on the console.
LOG_PLAIN=0
